Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/gio_mac_mini/Desktop/Apps/RN-Form-Splash/App.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var _tcombFormNative = require('tcomb-form-native');

var _tcombFormNative2 = _interopRequireDefault(_tcombFormNative);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Home: {
    displayName: 'Home'
  },
  ThankYou: {
    displayName: 'ThankYou'
  },
  App: {
    displayName: 'App'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/gio_mac_mini/Desktop/Apps/RN-Form-Splash/App.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var Form = _tcombFormNative2.default.form.Form;

var postive = _tcombFormNative2.default.refinement(_tcombFormNative2.default.Boolean, function (b) {
  return b === true;
});

var User = _tcombFormNative2.default.struct({
  firstName: _tcombFormNative2.default.String,
  lastName: _tcombFormNative2.default.String,
  email: _tcombFormNative2.default.String,
  phone: _tcombFormNative2.default.Number,
  terms: postive
});

var _ = require('lodash');

var stylesheet = _.cloneDeep(_tcombFormNative2.default.form.Form.stylesheet);

stylesheet.formGroup.normal.marginBottom = 0;

stylesheet.textbox.normal.marginTop = 5, stylesheet.textbox.normal.backgroundColor = "#eeeeee";
stylesheet.textbox.error.backgroundColor = "#eeeeee";

stylesheet.controlLabel.normal.color = "#eeeeee";
stylesheet.controlLabel.normal.backgroundColor = 'rgba(0,0,0,0)';

var options = {
  auto: 'placeholders',
  fields: {
    firstName: {
      autoCorrect: false,
      error: "Please enter your First Name."
    },
    lastName: {
      autoCorrect: false,
      error: "Please enter your Last Name."
    },
    email: {
      autoCorrect: false,
      keyboardType: "email-address",
      error: 'Please enter your Email.'
    },
    phone: {
      autoCorrect: false,
      error: 'Please enter a valid Phone Number.'
    },
    terms: {
      label: 'Agree to Terms',
      error: function error(value) {
        if (value === false) {
          return 'Please Agree to Terms';
        } else {
          true;
        }
      }
    }
  },
  stylesheet: stylesheet
};

var Home = _wrapComponent('Home')(function (_React$Component) {
  _inherits(Home, _React$Component);

  function Home() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Home);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Home.__proto__ || Object.getPrototypeOf(Home)).call.apply(_ref, [this].concat(args))), _this), _this.handleSubmit = function () {
      var value = _this._form.getValue();
      if (value === null) {
        console.log('null');
      } else {
        _this.setState({ submitting: true });

        var firstName = encodeURIComponent(value.firstName);
        var lastName = encodeURIComponent(value.lastName);
        var email = encodeURIComponent(value.email);
        var phone = encodeURIComponent(value.phone);
        var requestBody = "firstName=" + firstName + "&lastName=" + lastName + "&email=" + email + "&phone=" + phone;

        console.log(requestBody);

        fetch("yourFetchAddressHere", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded' },
          body: requestBody
        }).then(function (response) {

          _this.setState({ submitting: false });

          var serverReturn = false;

          var data = {
            result: false,
            message: "waiting for body to be parsed"
          };

          try {
            data = JSON.parse(response._bodyInit);
            serverReturn = true;
          } catch (e) {
            serverReturn = false;
            console.log(response);
            alert("can't connect to server. please try again later.");
          }

          if (serverReturn) {
            if (data.result) {
              var navigate = _this.props.navigation.navigate;

              navigate('ThankYou');
            } else {
              alert(data.message);
            }
          }
        }).catch(function (error) {
          alert("can't connect to server. please try again later.");
          console.error(error);
        });
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Home, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.KeyboardAvoidingView,
        {
          style: styles.container3,
          behavior: 'padding',
          __source: {
            fileName: _jsxFileName,
            lineNumber: 129
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1,
              backgroundColor: '#000000'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 133
            }
          },
          _react3.default.createElement(_reactNative.Image, {
            style: styles.container,
            source: require('./img/yourImgHere.jpg'),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 139
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            { style: styles.form, __source: {
                fileName: _jsxFileName,
                lineNumber: 143
              }
            },
            _react3.default.createElement(Form, {
              ref: function ref(c) {
                return _this2._form = c;
              },
              type: User,
              options: options,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 144
              }
            }),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.buttonContainer, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 149
                }
              },
              _react3.default.createElement(_reactNative.Button, {
                color: '#eeeeee',
                title: 'SUBMIT',
                onPress: this.handleSubmit,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 150
                }
              })
            )
          ),
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.words, __source: {
                fileName: _jsxFileName,
                lineNumber: 157
              }
            },
            '*Always need a space for disclaimers when it comes to forms.'
          )
        )
      );
    }
  }]);

  return Home;
}(_react3.default.Component));

;

var ThankYou = _wrapComponent('ThankYou')(function (_React$Component2) {
  _inherits(ThankYou, _React$Component2);

  function ThankYou() {
    _classCallCheck(this, ThankYou);

    return _possibleConstructorReturn(this, (ThankYou.__proto__ || Object.getPrototypeOf(ThankYou)).apply(this, arguments));
  }

  _createClass(ThankYou, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this4 = this;

      this.timeoutHandle = setTimeout(function () {
        var navigate = _this4.props.navigation.navigate;

        navigate('Home');
      }, 5000);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.timeoutHandle);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.View,
        {
          style: {
            flex: 1,
            backgroundColor: '#eee'
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 180
          }
        },
        _react3.default.createElement(_reactNative.Image, {
          style: styles.container2,
          source: require('./img/yourImgHere.jpg'),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 186
          }
        })
      );
    }
  }]);

  return ThankYou;
}(_react3.default.Component));

;

var SimpleApp = (0, _reactNavigation.StackNavigator)({
  Home: {
    screen: Home,
    headerMode: 'none',
    navigationOptions: {
      header: null
    }
  },
  ThankYou: {
    screen: ThankYou,
    headerMode: 'none',
    navigationOptions: {
      header: null
    }
  }
});

var App = _wrapComponent('App')(function (_React$Component3) {
  _inherits(App, _React$Component3);

  function App() {
    _classCallCheck(this, App);

    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
  }

  _createClass(App, [{
    key: 'render',
    value: function render() {
      return _react3.default.createElement(SimpleApp, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 214
        }
      });
    }
  }]);

  return App;
}(_react3.default.Component));

exports.default = App;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    resizeMode: 'contain',
    width: null,
    height: null
  },
  form: {
    backgroundColor: '#000000',
    marginBottom: null,
    paddingRight: 50,
    paddingLeft: 50
  },
  container2: {
    flex: 1,
    justifyContent: 'center',
    resizeMode: 'cover',
    width: null,
    height: null
  },
  buttonContainer: {
    backgroundColor: '#835942',
    marginTop: 20,
    borderRadius: 5,
    paddingRight: 10,
    paddingLeft: 10,
    shadowColor: '#000000',
    shadowOffset: {
      width: 0,
      height: 3
    },
    shadowRadius: 10,
    shadowOpacity: 0.25
  },
  words: {
    margin: 24,
    fontSize: 12,
    fontWeight: 'bold',
    textAlign: 'center',
    color: '#eeeeee'
  },
  container3: {
    backgroundColor: '#000000',
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  }
});